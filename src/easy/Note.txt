-- Reverse String -- 
String  , StringBuffer , StringBuilder

Mutability Difference:
String is immutable, if you try to alter their values, another object gets created, 
whereas StringBuffer and StringBuilder are mutable so they can change their values.

Thread-Safety Difference:
The difference between StringBuffer and StringBuilder is that StringBuffer is thread-safe. 
So when the application needs to be run only in a single thread then it is better to use StringBuilder. 
StringBuilder is more efficient than StringBuffer.

Situations:
1>. If your string is not going to change use a String class because a String object is immutable.
2>. If your string can change (example: lots of logic and operations in the construction of the string) 
	and will only be accessed from a single thread, using a StringBuilder is good enough.
3>. If your string can change, and will be accessed from multiple threads, 
	use a StringBuffer because StringBuffer is synchronous so you have thread-safety.

-- Nim Game -- 
1>. 1 =< n <=3 , 1st turn win;
2>. n =4 , 1st  turn failed;
3>. 5 =< n <= 7 , 1st turn can tansform to 2> situation by taking 1 ,2 ,3 stone. So , 1st turn win.
4>. No matter how many stones the 1st turn takes, 2nd turn can transform to 3> situation . So , 1st turn failed.
...
n%4 !=0 , 1st turn win.

-- House Rob --
Using Dynamic Programming
solition 1:
State Transition function : sum[i] = Max(sum[i-2]+nums[i],sum[i-1]);
sum[i] means the maximum amount of money when you rob the i th house.
solution 2: 
Divide the array into evens and odds.

-- Factorial Trailing Zeroes --
Solution 1: Calculate the number of 5 between 1-N
Solution 2: Calculate the number of power(5,k);